#!/usr/bin/env nft -f

table inet sfw {
	include "./conf.def"

	set private-net4 {
		type ipv4_addr
		flags constant,interval
		elements = $SET_PRIVATE_NETS_V4
	}

	set private-net6 {
		type ipv6_addr
		flags constant,interval
		elements = $SET_PRIVATE_NETS_V6
	}

	# debug counter
	counter invalid-ct-ethernet { packets 0 bytes 0 }
	# !(tcp|udp) protocol packets dropped
	counter catchall-common { packets 0 bytes 0 }
	# iifgroup != IIFGROUP_ETHERNET | IIFGROUP_VPN
	counter iif-other-common { packets 0 bytes 0 }

	# HOOK        CHAIN        CHAIN        CHAIN       CHAIN      VERDICT
	# input   ==> dispatch ==> ethernet ==> public  ==> common ==> reject
	# input   ==> dispatch ==> ethernet ==> private ==> common ==> reject
	# input   ==> dispatch ==>              vpn                ==> accept
	# input   ==> dispatch ==>                          common ==> reject
	# output  ==>                       ==> output             ==> accept
	# forward ==>                       ==> forward ==> common ==> reject

	chain dispatch {
		type filter hook input priority filter; policy drop;
		
		iif "lo" accept
		iifgroup $IIFGROUP_ETHERNET goto ethernet
		iifgroup $IIFGROUP_VPN goto vpn
		counter name "iif-other-common" goto common
	}

	chain ethernet {
		ct state established,related accept
		ct state invalid counter name "invalid-ct-ethernet" drop
		ip saddr @private-net4 jump private
		ip6 saddr @private-net6 jump private
		goto public
	}

	chain common {
		ip protocol icmp accept
		ip protocol igmp accept
		ip6 nexthdr ipv6-icmp accept
		meta l4proto udp reject
		meta l4proto tcp reject with tcp reset
		counter name "catchall-common" reject with icmpx type port-unreachable
	}

	include "./zones/vpn.nft"
	include "./zones/private.nft"
	include "./zones/public.nft"
	include "./zones/output.nft"
	include "./zones/forward.nft"
}
