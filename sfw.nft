#!/usr/bin/env nft -f

table inet sfw {
	include "./conf.def"

	set private-net4 {
		type ipv4_addr
		flags constant,interval
		elements = $SET_PRIVATE_NETS_V4
	}

	set private-net6 {
		type ipv6_addr
		flags constant,interval
		elements = $SET_PRIVATE_NETS_V6
	}

	# invalid packets
	counter invalid-pkts { packets 0 bytes 0 }
	# !(tcp|udp) protocol packets dropped
	counter catchall { packets 0 bytes 0 }
	# iifgroup != IIFGROUP_ETHERNET | IIFGROUP_VPN
	counter iif-other { packets 0 bytes 0 }

	# HOOK        CHAIN        CHAIN        CHAIN       CHAIN        VERDICT
	# input   ==> dispatch ==> prologue ==> public  ==> epilogue ==> reject
	# input   ==> dispatch ==> prologue ==> private ==> epilogue ==> reject
	# input   ==> dispatch ==>              vpn                  ==> accept
	# input   ==> dispatch ==>                          epilogue ==> reject
	# output  ==>                       ==> output               ==> accept
	# forward ==>                       ==> forward ==> epilogue ==> reject

	chain dispatch {
		type filter hook input priority filter; policy drop;
		iif "lo" accept
		iifgroup $IIFGROUP_ETHERNET goto prologue
		iifgroup $IIFGROUP_VPN goto vpn
		counter name "iif-other" goto epilogue
	}

	chain prologue {
		jump ct-state-filter
		ip saddr @private-net4 jump private
		ip6 saddr @private-net6 jump private
		goto public
	}

	chain epilogue {
		ip protocol icmp accept
		ip protocol igmp accept
		ip6 nexthdr ipv6-icmp accept
		goto verdict
	}

	chain verdict {
		meta l4proto udp reject
		meta l4proto tcp reject with tcp reset
		counter name "catchall" reject with icmpx type port-unreachable
	}

	chain ct-state-filter {
		ct state established,related accept
		ct state invalid counter name "invalid-pkts" drop
	}

	chain rp-filter {
		# reverse path filter for ipv6
		type filter hook prerouting priority raw; policy drop;
		fib saddr . iif oif exists accept
	}

	include "./zones/vpn.nft"
	include "./zones/private.nft"
	include "./zones/public.nft"
	include "./zones/output.nft"
	include "./zones/forward.nft"
}
